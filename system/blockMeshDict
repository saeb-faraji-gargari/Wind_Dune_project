/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

//x_0 -10;
//y_0 -10;

#include        "../0/include/initialConditions"   // to call "x_0" and "y_0", "x1" and "x2" and  ... and "h1" and  ... 

/*x1 #calc"20+$x_0";   //20;
x2 150;
x3 22;
x4 20;
x5 60;
x6 50;
h1 #calc"100+$y_0";  //100;  // elevation of the upper patch
h2 #calc"3+$y_0";   //3;
h3 #calc"25+$y_0";   //25;
h4 #calc"5+$y_0";   //5;
d 100;   //50;   // d is the depth in y direction normol to the plan*/


// The below command should be keep in this line (line 38) otherwise the "sed" in "run_mesh_all.sh" does not work correct.
Mesh_refined_factor    4;   //3;   //1;   //1;

vertices
(
    
name v0	   ($x_0 $y_0 0 )                                 // 0 node 
name v1    ( #calc"$x_0+$x1" $y_0 0)                                // 1 node
name v2    ( #calc"$x_0+$x1" #calc"$y_0+$h1" 0)                              // 2 node
name v3    ( $x_0 #calc"$y_0+$h1" 0)                                // 3 node
name v4    ( #calc"$x_0+$x1+$x2" #calc"$y_0+$h2" 0)                   // 4 node 
name v5    ( #calc"$x_0+$x1+$x2" #calc"$y_0+$h1" 0)                   // 5 node
    

name v6	( #calc"$x_0+$x1+$x2+$x3" #calc"$y_0+$h3" 0)               // 6 node
name v7    ( #calc"$x_0+$x1+$x2+$x3" #calc"$y_0+$h1" 0)               // 7 node
	
name v8	( #calc"$x_0+$x1+$x2+$x3+$x4" #calc"$y_0+$h3" 0)           // 8 node
name v9    ( #calc"$x_0+$x1+$x2+$x3+$x4" #calc"$y_0+$h1" 0)           // 9 node
	
name v10	( #calc"$x_0+$x1+$x2+$x3+$x4+$x5" #calc"$y_0+$h4" 0)       // 10 node 
name v11    ( #calc"$x_0+$x1+$x2+$x3+$x4+$x5" #calc"$y_0+$h1" 0)       // 11 node
	
name v12	( #calc"$x_0+$x1+$x2+$x3+$x4+$x5+$x6" #calc"$y_0+$h4" 0)   // 12 node
name v13    ( #calc"$x_0+$x1+$x2+$x3+$x4+$x5+$x6" #calc"$y_0+$h1" 0)   // 13 node
	
	
	
name v14	( $x_0 $y_0 $d)                                          // 14 node 
name v15    ( #calc"$x_0+$x1" $y_0 $d)                               // 15 node
name v16    ( #calc"$x_0+$x1"  #calc"$y_0+$h1" $d)                             // 16 node
name v17    ( $x_0 #calc"$y_0+$h1" $d)                               // 17 node
name v18    ( #calc"$x_0+$x1+$x2"  #calc"$y_0+$h2" $d)                  // 18 node 
name v19    ( #calc"$x_0+$x1+$x2"  #calc"$y_0+$h1" $d)                  // 19 node
    

name v20	( #calc"$x_0+$x1+$x2+$x3"  #calc"$y_0+$h3" $d)              // 20 node
name v21    ( #calc"$x_0+$x1+$x2+$x3"  #calc"$y_0+$h1" $d)              // 21 node
	
name v22	( #calc"$x_0+$x1+$x2+$x3+$x4"  #calc"$y_0+$h3" $d)          // 22 node
name v23    ( #calc"$x_0+$x1+$x2+$x3+$x4"  #calc"$y_0+$h1" $d)          // 23 node
	
name v24	( #calc"$x_0+$x1+$x2+$x3+$x4+$x5"  #calc"$y_0+$h4" $d)      // 24 node
name v25    ( #calc"$x_0+$x1+$x2+$x3+$x4+$x5"  #calc"$y_0+$h1" $d)      // 25 node
	
name v26	( #calc"$x_0+$x1+$x2+$x3+$x4+$x5+$x6"  #calc"$y_0+$h4" $d)  // 26 node
name v27    ( #calc"$x_0+$x1+$x2+$x3+$x4+$x5+$x6"  #calc"$y_0+$h1" $d)  // 27 node

	
);

blocks
(
    
	hex (v0 v1 v2 v3 v14 v15 v16 v17) (#calc"4*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor") simpleGrading (1 1 1) //block1
	hex (v1 v4 v5 v2 v15 v18 v19 v16) (#calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor") simpleGrading (1 1 1) //block2
	hex (v4 v6 v7 v5 v18 v20 v21 v19) (#calc"5*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor") simpleGrading (1 1 1) //block3
	hex (v6 v8 v9 v7 v20 v22 v23 v21) (#calc"5*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor") simpleGrading (1 1 1) //block4
	hex (v8 v10 v11 v9 v22 v24 v25 v23) (#calc"10*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor") simpleGrading (1 1 1) //block3
	hex (v10 v12 v13 v11 v24 v26 v27 v25) (#calc"10*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor" #calc"20*$Mesh_refined_factor") simpleGrading (1 1 1) //block4

);

boundary
(
    front
    {
	
		type            cyclic;
        neighbourPatch  Back;
		faces
        (
            (v0 v1 v2 v3)
            (v1 v4 v5 v2)
			(v4 v6 v7 v5)
			(v6 v8 v9 v7)
			(v8 v10 v11 v9)
			(v10 v12 v13 v11)
        );
		
        /*type patch;
        faces
        (
            (v0 v1 v2 v3)
            (v1 v4 v5 v2)
			(v4 v6 v7 v5)
			(v6 v8 v9 v7)
			(v8 v10 v11 v9)
			(v10 v12 v13 v11)
        );*/
    }
	
	
	Back
	{
		
		type            cyclic;
        neighbourPatch  front;
		faces
        (
            (v14 v15 v16 v17)
            (v15 v18 v19 v16)
			(v18 v20 v21 v19)
			(v20 v22 v23 v21)
			(v22 v24 v25 v23)
			(v24 v26 v27 v25)
        );
		
        /*type patch;
        faces
        (
            (v14 v15 v16 v17)
            (v15 v18 v19 v16)
			(v18 v20 v21 v19)
			(v20 v22 v23 v21)
			(v22 v24 v25 v23)
			(v24 v26 v27 v25)
        );*/
    }
	
    inlet
    {
        type patch;
        faces
        (
            (v0 v3 v17 v14)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (v13 v12 v26 v27)   
        );
    }
	
    ground
    {
        type wall;
        faces
        (
            (v0 v1 v15 v14)
			(v1 v4 v18 v15)
			(v4 v6 v20 v18)
			(v6 v8 v22 v20)
			(v8 v10 v24 v22)
			(v10 v12 v26 v24)
        );
    }
    upperPatch
    {
        type patch;
        faces
        (
            (v2 v16 v17 v3)
			(v2 v5 v19 v16)
			(v5 v7 v21 v19)
			(v7 v9 v23 v21)
			(v9 v11 v25 v23)
			(v11 v13 v27 v25)
			
        );
    }
);

// ************************************************************************* //
